import sys
from collections import namedtuple
from unittest.mock import MagicMock

import pytest

DomainUser = namedtuple("DomainUser", ["domain", "username"])


@pytest.fixture(scope="module")
def local_user():
    return DomainUser("TEST-DOMAIN", "localuser")


@pytest.fixture(scope="module")
def patch_win32api_get_user_name(local_user):
    win32api = MagicMock()
    win32api.GetUserNameEx = MagicMock(return_value=f"{local_user.domain}\\{local_user.username}")
    win32api.NameSamCompatible = None

    sys.modules["win32api"] = win32api


def _create_windows_host(http_enabled, https_enabled):
    host = MagicMock()
    host.os = {"type": "windows"}
    host.services = {}

    if http_enabled:
        host.services["tcp-5985"] = {}

    if https_enabled:
        host.services["tcp-5986"] = {}

    return host


@pytest.fixture
def https_only_host():
    return _create_windows_host(False, True)


@pytest.fixture
def http_only_host():
    return _create_windows_host(True, False)


@pytest.fixture
def http_and_https_both_enabled_host():
    return _create_windows_host(True, True)


@pytest.fixture
def powershell_disabled_host():
    return _create_windows_host(False, False)
