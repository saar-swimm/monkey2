# from infection_monkey.exploit.powershell_utils.auth_options import AuthOptions
from infection_monkey.exploit.powershell_utils.auth_options import (
    AUTH_BASIC,
    AUTH_NEGOTIATE,
    AUTH_NTLM,
    ENCRYPTION_AUTO,
    ENCRYPTION_NEVER,
    get_auth_options,
)
from infection_monkey.exploit.powershell_utils.credentials import Credentials, SecretType

CREDENTIALS_WITH_PASSWORD = Credentials("user1", "password1", SecretType.PASSWORD)
CREDENTIALS_EMPTY_PASSWORD = Credentials("user2", "", SecretType.PASSWORD)
CREDENTIALS_NONE_PASSWORD = Credentials("user3", None, SecretType.CACHED)
CREDENTIALS_LM_HASH = Credentials("user4", "LM_HASH:NONE", SecretType.LM_HASH)
CREDENTIALS_NT_HASH = Credentials("user5", "NONE:NT_HASH", SecretType.NT_HASH)


def test_get_auth_options__ssl_false_with_no_open_ports(powershell_disabled_host):
    auth_options = get_auth_options(CREDENTIALS_WITH_PASSWORD, powershell_disabled_host)
    assert auth_options.ssl is False


def test_get_auth_options__ssl_true_with_password(https_only_host):
    auth_options = get_auth_options(CREDENTIALS_WITH_PASSWORD, https_only_host)

    assert auth_options.ssl


def test_get_auth_options__ssl_preferred(http_and_https_both_enabled_host):
    auth_options = get_auth_options(CREDENTIALS_WITH_PASSWORD, http_and_https_both_enabled_host)

    assert auth_options.ssl


def test_get_auth_options__ssl_true_empty_password(https_only_host):
    auth_options = get_auth_options(CREDENTIALS_EMPTY_PASSWORD, https_only_host)

    assert not auth_options.ssl


def test_get_auth_options__ssl_true_none_password(https_only_host):
    auth_options = get_auth_options(CREDENTIALS_NONE_PASSWORD, https_only_host)

    assert auth_options.ssl


def test_get_auth_options__ssl_false_with_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_WITH_PASSWORD, http_only_host)

    assert not auth_options.ssl


def test_get_auth_options__ssl_false_empty_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_EMPTY_PASSWORD, http_only_host)

    assert not auth_options.ssl


def test_get_auth_options__ssl_false_none_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_NONE_PASSWORD, http_only_host)

    assert not auth_options.ssl


def test_get_auth_options__auth_type_with_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_WITH_PASSWORD, http_only_host)

    assert auth_options.auth_type == AUTH_NEGOTIATE


def test_get_auth_options__auth_type_empty_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_EMPTY_PASSWORD, http_only_host)

    assert auth_options.auth_type == AUTH_BASIC


def test_get_auth_options__auth_type_none_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_NONE_PASSWORD, http_only_host)

    assert auth_options.auth_type == AUTH_NEGOTIATE


def test_get_auth_options__auth_type_with_LM_hash(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_LM_HASH, http_only_host)

    assert auth_options.auth_type == AUTH_NTLM


def test_get_auth_options__auth_type_with_NT_hash(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_NT_HASH, http_only_host)

    assert auth_options.auth_type == AUTH_NTLM


def test_get_auth_options__encryption_with_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_WITH_PASSWORD, http_only_host)

    assert auth_options.encryption == ENCRYPTION_AUTO


def test_get_auth_options__encryption_empty_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_EMPTY_PASSWORD, http_only_host)

    assert auth_options.encryption == ENCRYPTION_NEVER


def test_get_auth_options__encryption_none_password(http_only_host):
    auth_options = get_auth_options(CREDENTIALS_NONE_PASSWORD, http_only_host)

    assert auth_options.encryption == ENCRYPTION_AUTO
