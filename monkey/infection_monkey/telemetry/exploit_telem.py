from typing import Dict

from common.common_consts.telem_categories import TelemCategoryEnum
from infection_monkey.i_puppet.i_puppet import ExploiterResultData
from infection_monkey.model.host import VictimHost
from infection_monkey.telemetry.base_telem import BaseTelem


class ExploitTelem(BaseTelem):
    def __init__(
        self,
        name: str,
        host: VictimHost,
        result: ExploiterResultData,
    ):
        """
        Default exploit telemetry constructor
        :param name: The name of exploiter used
        :param host: The host machine
        :param result: Data about the exploitation (success status, info, attempts, etc)
        """
        super(ExploitTelem, self).__init__()

        self.name = name
        self.host = host.__dict__
        self.exploitation_result = result.exploitation_success
        self.propagation_result = result.propagation_success
        self.interrupted = result.interrupted
        self.info = result.info
        self.attempts = result.attempts

    telem_category = TelemCategoryEnum.EXPLOIT

    def get_data(self) -> Dict:
        return {
            "exploitation_result": self.exploitation_result,
            "propagation_result": self.propagation_result,
            "interrupted": self.interrupted,
            "machine": self.host,
            "exploiter": self.name,
            "info": self.info,
            "attempts": self.attempts,
        }
